#!/bin/bash

#set -ex

#REGION=$REGION

for REGIONLINE in $(aws --output=text ec2 describe-regions --region us-west-2 | sed 's/\s/,/g'); do
	REGION=$(echo $REGIONLINE | cut -f3 -d,)
	echo "Looking in $REGION for $RANCHEROS_VERSION"

	# TODO: need a safer way to do this
	#generate a key pair
	KEY=auto-sven-os-$REGION
	KEYFILE="$(pwd)/$KEY.pem"
	NEWKEY="0"

	# Get AMI names
	for LINE in $(aws --output text ec2 describe-images --region $REGION --owner self --query 'Images[*].{ID:ImageId,Name:Name}'  | grep ${RANCHEROS_VERSION} | sed 's/\s/,/g' ); do
		if [ ! -f "$KEYFILE" ]; then
			NEWKEY="1"
			echo "Generating a new Keypair $KEY"
			aws --output=text ec2 create-key-pair --key-name $KEY --region $REGION | sed 's/.*\t---/---/' | sed 's/KEY-----\t.*/KEY-----/' > "$KEYFILE"
			chmod 600 "$KEYFILE"
		fi
		AMI=$(echo "$LINE" | cut -f1 -d ',')
		echo "starting $AMI in $REGION"
		INSTANCE=$(aws --output text  ec2 run-instances --count 1 \
			--image-id $AMI \
			--instance-type t2.micro \
			--region $REGION \
			--key-name $KEY |  sed 's/\s/,/g' | grep INSTANCES)
		ID=$(echo $INSTANCE | cut -f8 -d,)
		IP=$(echo $INSTANCE | cut -f14 -d,)
		echo "== $ID at $IP"
		#echo $INSTANCE
		count=1
		while [ "$IP" == "" ]; do
			sleep 1
			INSTANCE=$(aws --output text ec2 describe-instances --instance-ids $ID --region $REGION | sed 's/\s/,/g' | grep INSTANCES)
			IP=$(echo $INSTANCE | cut -f14 -d,)
			echo "  $count == $ID at $IP"
			count=$((1+$count))
		done
		STATE=""
		echo "Waiting for instance to be initialized"
		while [ "$STATE" != "running" ]; do
			sleep 1
			STATE=$(aws --output text ec2 describe-instances --instance-ids $ID --region $REGION | sed 's/\s/,/g' | grep STATE | cut -f3 -d,)
			echo -ne "_"
		done
		while [ "$STATE" != "" ]; do
			sleep 5
			STATE=$(aws --output text ec2 describe-instance-status --instance-ids $ID --region $REGION | sed 's/\s/,/g' | grep initializing )
			echo -ne "."
		done
		echo sleeping
		sleep 5

		echo "requesting uname"
		ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $KEYFILE rancher@$IP uname -a
		chmod 755 scripts/test.sh
		scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $KEYFILE scripts/test.sh rancher@$IP:~/test.sh
		ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $KEYFILE rancher@$IP ./test.sh
		sleep 5
		ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $KEYFILE rancher@$IP ros console list

		echo "Terminating $ID"
		aws --output text ec2 terminate-instances --instance-ids $ID --region $REGION
	done

	if [ "$NEWKEY" == "1" ]; then
		aws --output=text ec2 delete-key-pair --key-name $KEY --region $REGION
		rm -f $KEYFILE
	fi
done
